#!/bin/bash
# autograderdb

# Stop on errors
set -e
#set -x

# Sanity check command line options
usage() {
  echo "Usage: $0 (create|destroy|reset|dump)"
}

if [ $# -ne 1 ]; then
  usage
  exit 1
fi

# Parse argument.  $1 is the first argument
case $1 in
  "create")
  if [ -f "var/ash_autograder.sqlite3" ]; then
    echo 'Error: database already exists'
    exit 1
  fi
    mkdir -p var/uploads
    echo '+ mkdir -p var/uploads'
    sqlite3 var/ash_autograder.sqlite3 < sql/schema.sql
    echo '+ sqlite3 var/ash_autograder.sqlite3 < sql/schema.sql'
    sqlite3 var/ash_autograder.sqlite3 < sql/data.sql
    echo '+ sqlite3 var/ash_autograder.sqlite3 < sql/data.sql'
    cp sql/uploads/* var/uploads/
    echo '+ cp sql/uploads/* var/uploads/'
    ;;

  "destroy")
    rm -rf var/ash_autograder.sqlite3 var/uploads
    echo '+ rm -rf var/ash_autograder.sqlite3 var/uploads'
    ;;

  "reset")
    rm -rf var/ash_autograder.sqlite3 var/uploads
    echo '+ rm -rf var/ash_autograder.sqlite3 var/uploads'
    mkdir -p var/uploads
    echo '+ mkdir -p var/uploads'
    sqlite3 var/ash_autograder.sqlite3 < sql/schema.sql
    echo '+ sqlite3 var/ash_autograder.sqlite3 < sql/schema.sql'
    sqlite3 var/ash_autograder.sqlite3 < sql/data.sql
    echo '+ sqlite3 var/ash_autograder.sqlite3 < sql/data.sql'
    cp sql/uploads/* var/uploads/
    echo '+ cp sql/uploads/* var/uploads/'
    ;;

  "dump")
    sqlite3 -batch -line var/ash_autograder.sqlite3 'SELECT * FROM users'
    sqlite3 -batch -line var/ash_autograder.sqlite3 'SELECT * FROM projects'
    sqlite3 -batch -line var/ash_autograder.sqlite3 'SELECT * FROM project_permissions'
    sqlite3 -batch -line var/ash_autograder.sqlite3 'SELECT * FROM submissions'
    ;;
  *)
    usage
    exit 1
    ;;
esac

